#########################################################################
# Title:         Saltbox: Docker | Network Tasks                        #
# Author(s):     desimaniac, l3uddz, salty                              #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Network | Get list of docker networks
  ansible.builtin.shell: docker network ls --format '{{ '{{' }} .Name{{ '}}' }}'
  register: docker_networks_list
  changed_when: false
  until: "docker_networks_list is not failed"
  retries: 10
  delay: 10

- name: Network | Get saltbox docker network gateway
  ansible.builtin.shell: docker network inspect saltbox -f '{{ '{{' }}.EnableIPv6{{ '}}' }}'
  register: docker_network_ipv6
  when: ('saltbox' in docker_networks_list.stdout_lines)

- name: "Network | Create new IPv6 saltbox docker network block"
  when: ('saltbox' not in docker_networks_list.stdout_lines) and docker_ipv6
  block:
    - name: Network | Create saltbox network (IPv6)
      community.docker.docker_network:
        name: saltbox
        state: present
        enable_ipv6: true
        ipam_config:
          - subnet: 172.19.0.0/16
          - subnet: fd00:dead:beef::/48

- name: "Network | Create new IPv4 saltbox docker network block"
  when: ('saltbox' not in docker_networks_list.stdout_lines) and (not docker_ipv6)
  block:
    - name: Network | Create saltbox network
      community.docker.docker_network:
        name: saltbox
        state: present
        ipam_config:
          - subnet: 172.19.0.0/16

- name: "Network | Migrating existing saltbox docker network block to IPv6"
  when: ('saltbox' in docker_networks_list.stdout_lines) and (docker_network_ipv6.stdout == 'false') and docker_ipv6
  block:
    - name: Network | Get list of containers on saltbox network
      ansible.builtin.shell: docker ps -a --filter network=saltbox --format '{{ '{{' }}.Names{{ '}}' }}'
      register: docker_containers
      changed_when: false

    - name: Network | Disconnect containers from bridge network
      ansible.builtin.shell: docker network disconnect -f bridge {{ item }}
      with_items: "{{ docker_containers.stdout_lines }}"
      register: r
      failed_when: r.rc > 1
      ignore_errors: true

    - name: Network | Rebuild saltbox network
      community.docker.docker_network:
        name: saltbox
        state: present
        enable_ipv6: true
        ipam_config:
          - subnet: 172.19.0.0/16
          - subnet: fd00:dead:beef::/48

    - name: Network | Connect containers to saltbox network
      ansible.builtin.shell: docker network connect saltbox {{ item }} --alias {{ item }}
      with_items: "{{ docker_containers.stdout_lines }}"
      register: q
      failed_when: q.rc > 1
      ignore_errors: true

- name: "Network | Migrating existing saltbox docker network block to IPv4"
  when: ('saltbox' in docker_networks_list.stdout_lines) and (docker_network_ipv6.stdout == 'true') and (not docker_ipv6)
  block:
    - name: Network | Get list of containers on saltbox network
      ansible.builtin.shell: docker ps -a --filter network=saltbox --format '{{ '{{' }}.Names{{ '}}' }}'
      register: docker_containers
      changed_when: false

    - name: Network | Disconnect containers from bridge network
      ansible.builtin.shell: docker network disconnect -f bridge {{ item }}
      with_items: "{{ docker_containers.stdout_lines }}"
      register: r
      failed_when: r.rc > 1
      ignore_errors: true

    - name: Network | Rebuild saltbox network
      community.docker.docker_network:
        name: saltbox
        state: present
        ipam_config:
          - subnet: 172.19.0.0/16

    - name: Network | Connect containers to saltbox network
      ansible.builtin.shell: docker network connect saltbox {{ item }} --alias {{ item }}
      with_items: "{{ docker_containers.stdout_lines }}"
      register: q
      failed_when: q.rc > 1
      ignore_errors: true

- name: Network | Remove IPv6 NAT Container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"
  vars:
    var_prefix: "ipv6nat"

- name: Network | Create IPv6 NAT Container
  community.docker.docker_container:
    name: "ipv6nat"
    image: "robbertkl/ipv6nat"
    pull: "yes"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/lib/modules:/lib/modules:ro"
    hostname: "ipv6nat"
    networks_cli_compatible: true
    comparisons:
      '*': ignore
    network_mode: "host"
    container_default_behavior: compatibility
    tls_hostname: localhost
    restart_policy: "always"
    privileged: yes
  when: docker_ipv6

- name: Network | Unset variables
  ansible.builtin.set_fact:
    docker_networks_list:
    docker_containers:
